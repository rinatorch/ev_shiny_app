)
ggplot() +
geom_bar(
data=station_county_table,
aes(x=county, weight=count)
)
ggplot() +
geom_bar(
data=station_county_table,
aes(x=county, y=count)
)
View(station_count)
View(station_county_table)
ggplot() +
geom_bar(
data=station_county_table,
aes(x=county, weight=n)
)
ggplot() +
geom_bar(
data=station_county_table,
aes(x=county, weight=n)+
coord_flip()
)
ggplot() +
geom_bar(
data=station_county_table,
aes(x=county, weight=n),
coord_flip()
)
ggplot() +
geom_bar(
data=station_county_table,
aes(x=county, weight=n))+
coord_flip()
ggplot() +
geom_bar(
data=station_county_table,
aes(x=county, reorder(weight=n)))+
coord_flip()
ggplot() +
geom_bar(
data=station_county_table,
aes(x=reorder(county, n)))+
coord_flip()
ggplot() +
geom_bar(
data=station_county_table,
aes(
x=reorder(county, n),
weight=n))+
coord_flip()
ggplot() +
geom_bar(
data=station_county_table,
aes(
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
data=station_county_table,
aes(
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
data=station_county_table,
aes(fill="Red"
x=reorder(county, n),
ggplot() +
geom_bar(
data=station_county_table,
aes(fill="red",
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
data=station_county_table,
aes(fill="blue",
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
data=station_county_table,
aes(fill="blue",
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
data=station_county_table,
aes(color="blue",
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
data=station_county_table,
aes(fillcolor="blue",
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
data=station_county_table,
aes(fillColor="blue",
x=reorder(county, n),
weight=n))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
knitr::opts_chunk$set(echo = TRUE)
ibrary(lubridate)
library(lubridate)
elx_cars <- read_csv("elx.csv")
library(tidyverse)
library(lubridate)
elx_cars <- read_csv("elx.csv")
elx_cars_t <- elx_cars %>% pivot_longer(cols = starts_with("20"), names_to = "Date", values_to = "Count")
elx_cars_t <-
elx_cars_t %>%
ym(elx_cars_t$Date)
elx_cars_t <-
elx_cars_t %>%
ymd(elx_cars_t$Date)
elx_cars <- read_csv("elx.csv")
elx_cars_t <- elx_cars %>% pivot_longer(cols = starts_with("20"), names_to = "Date", values_to = "Count")
elx_cars_t <-
elx_cars_t %>%
ymd(elx_cars_t$Date)
elx_cars <- read_csv("elx.csv")
elx_cars_t <- elx_cars %>% pivot_longer(cols = starts_with("20"), names_to = "Date", values_to = "Count")
elx_cars_t <-
elx_cars_t %>%
ymd(elx_cars_t$Date)
elx_cars <- read_csv("elx.csv")
elx_cars_t <- elx_cars %>% pivot_longer(cols = starts_with("20"), names_to = "Date", values_to = "Count")
elx_cars_t <-
elx_cars_t %>%
ym(elx_cars_t$Date)
elx_cars <- read_csv("elx.csv")
elx_cars_t <- elx_cars %>% pivot_longer(cols = starts_with("20"), names_to = "Date", values_to = "Count")
elx_cars <- read_csv("elx.csv")
elx_cars_t <- elx_cars %>% pivot_longer(cols = starts_with("20"), names_to = "Date", values_to = "Count")%>%
drop_na()
elx_cars_t <-
elx_cars_t %>%
ym(elx_cars_t$Date)
write.csv(elx_cars_t, file='elxr.csv', row.names=FALSE)
elx_cars <- read_csv("elx.csv")
elx_cars_t <- elx_cars %>% pivot_longer(cols = starts_with("20"), names_to = "Date", values_to = "Count")%>%
drop_na()
elx_cars_t
write.csv(elx_cars_t, file='elxr.csv', row.names=FALSE)
elx_carsg <- read_csv("elxg.csv")
View(elx_carsg)
ggplot() + geom_line(data=elx_carsg, aes(x="Date", y="Count", group="county"))
ggplot() +
geom_line(data=elx_carsg, aes(x=Date, y=Count, group=county), color="steelblue")
ggplot() +
geom_line(data=elx_carsg, aes(x=Date, y=Count, group=county), color="steelblue")+
scale_x_date(date_labels = "%b/%Y")+
theme_minimal()
ggplot() +
geom_line(data=elx_carsg, aes(x=Date, y=Count, group=county), color="steelblue"
ggplot() +
ggplot() +
geom_line(data=elx_carsg, aes(x=Date, y=Count, group=county), color="steelblue")
elx_carsg <-
elx_carsg %>%
dmy(elx_carsg$Date)
which(is.na(elx_carsg$Date))
elx_carsg <- read_csv("elxg.csv")
which(is.na(elx_carsg$Date))
elx_carsg <-
elx_carsg %>%
dmy(elx_carsg$Date)
library(shiny); runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
knitr::opts_chunk$set(echo = TRUE)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
View(pop_county_df)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
ggplot() +
geom_bar(
fill = "blue",
data=pop_county_df,
aes(
x=reorder(county, estimate),
weight=estimate))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
fill = "blue",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minal()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Maryland Electric Vehicle Charging Stations, by County",
x="Station Count",
y="County"
)
ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
pop_county_df$NAME<-gsub(",Maryland","",as.character(pop_county_df$NAME))
ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
pop_county_df$NAME<-gsub(", Maryland","",as.character(pop_county_df$NAME))
ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
```
install.packages("stringr")
install.packages("stringr")
library(stringr)
library(stringr)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)%>%
str_to_title(NAME)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)%>%
str_to_title(pop_county_df$NAME)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)%>%
str_to_title("NAME")
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
pop_county_df$NAME = str_to_title(pop_county_df$NAME)
pop_county_df$NAME<-gsub(", Maryland","",as.character(pop_county_df$NAME))
ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
pop_bars <- ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
ggplotly(pop_bars, tooltip = c("count"))
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
library(shiny); runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
pop_county_df$NAME = str_to_title(pop_county_df$NAME)
pop_county_df$NAME<-gsub(", Maryland","",as.character(pop_county_df$NAME))
pop_bars <- ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
ggplotly(pop_bars, tooltip = c("count"))
library(stringr)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
pop_county_df$NAME = str_to_title(pop_county_df$NAME)
pop_county_df$NAME<-gsub(", Maryland","",as.character(pop_county_df$NAME))
pop_bars <- ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes(
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
ggplotly(pop_bars, tooltip = c("count"))
library(stringr)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
pop_county_df$NAME = str_to_title(pop_county_df$NAME)
pop_county_df$NAME<-gsub(", Maryland","",as.character(pop_county_df$NAME))
pop_bars <- ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes((text = paste0('<b>Jurisdiction</b>: ', county, '<br>')),
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
plotly_pop <- ggplotly(pop_bars, tooltip = "text") %>%
layout(hoverlabel = list(namelength = -1))
library(stringr)
pop_county_df <- get_acs(geography = "county",
variables = "B01003_001",
state = "MD",
geometry = FALSE)
pop_county_df$NAME = str_to_title(pop_county_df$NAME)
pop_county_df$NAME<-gsub(", Maryland","",as.character(pop_county_df$NAME))
pop_bars <- ggplot() +
geom_bar(
fill = "gray",
data=pop_county_df,
aes((text = paste0('<b>Jurisdiction</b>: ', estimate, '<br>')),
x=reorder(NAME, estimate),
weight=estimate))+
coord_flip()+
theme_minimal()+
labs(
title="Population, by Jurisdiction",
x="Jurisdiction",
y="Population"
)
plotly_pop <- ggplotly(pop_bars, tooltip = "text") %>%
layout(hoverlabel = list(namelength = -1))
library(shiny); runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
runApp('C:/Users/Rina/Desktop/coding/first_shiny_app/app_layout.r')
library(shiny); runApp('C:/Users/Rina/Desktop/coding/ev_shiny_app/app_layout.r')
